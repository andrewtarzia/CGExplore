name: Tests
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
jobs:
  ruff:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"
      - run: "pip install -e '.[dev]'"
      - run: ruff .
  mypy:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"
      - run: "pip install -e '.[dev]'"
      - run: mypy src
  black:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"
      - run: "pip install -e '.[dev]'"
      - run: black --check .
  pytest:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.11
          channels: conda-forge,defaults
          channel-priority: true
      - shell: bash -el {0}
        run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          printenv | sort
      - shell: bash -el {0}
        run: conda install -c conda-forge openmm openmmtools
      - shell: bash -el {0}
        run: "pip install --upgrade pip"
      - shell: bash -el {0}
        run: "pip install --upgrade setuptools"
      - shell: bash -el {0}
        run: "pip install -e '.[dev]'"
      - shell: bash -el {0}
        run: pytest
  build-test:
    runs-on: ubuntu-22.04

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2

        with:
          auto-update-conda: true
          miniforge-variant: Mambaforge
          channels: conda-forge,defaults
          python-version: 3.11
          activate-environment: buildtest
          use-mamba: true

      - name: Build environment
        run: |
          conda activate buildtest
          conda install -c conda-forge openmm openmmtools
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install -e '.[dev]'

      - name: Clone repo
        run: git clone https://github.com/andrewtarzia/cg_model_test --depth 1

      - name: Run script
        run: python cg_model_test/cg_model_test.py

      - uses: actions/upload-artifact@v3
        with:
          name: parity-plot
          path: parity.png